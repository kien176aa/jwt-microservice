#version: '3.8'
#
#services:
#  # MySQL Database
#  mysql:
#    image: mysql:8.0
#    container_name: mysql
#    restart: always
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#      MYSQL_DATABASE: javatechie
#    ports:
#      - "3306:3306"
#    volumes:
#      - ./.docker/data/db:/var/lib/mysql
#      - ./sql/url_access.sql:/docker-entrypoint-initdb.d/url_access.sql
#
#  # Redis Cache
#  redis:
#    image: redis:7-alpine
#    container_name: redis-cache
#    restart: always
#    ports:
#      - "6379:6379"
#    volumes:
#      - ./.docker/data/redis:/data
#    command: redis-server --appendonly yes
#
#
#  # Zookeeper
#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    container_name: zookeeper
#    restart: always
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#      ZOOKEEPER_INIT_LIMIT: 5
#      ZOOKEEPER_SYNC_LIMIT: 2
#    ports:
#      - "2181:2181"
#
#
#  # Kafka
#  kafka:
#    image: confluentinc/cp-kafka:7.4.0
#    container_name: kafka
#    restart: always
#    depends_on:
#      - zookeeper
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
#
#
#  frontend-service:
#    container_name: frontend
#    build:
#      context: fe
#      dockerfile: Dockerfile
#    ports:
#      - "3000:80"
#
#  identity-service:
#    container_name: identity-service
#    build:
#      context: .
#      dockerfile: identity-service/Dockerfile
#    depends_on:
#      - mysql
#    environment:
#      MYSQL_HOST: mysql
#      REDIS_HOST: redis-cache
#      MYSQL_PORT: 3306
#      MYSQL_DATABASE: javatechie
#      MYSQL_USER: root
#      MYSQL_PASSWORD: root
#      SPRING_APPLICATION_NAME: IDENTITY-SERVICE
#      EUREKA_DEFAULT_ZONE: http://eureka:8761/eureka/
#      SERVER_PORT: 9898
#    ports:
#      - "9898:9898"
#
#  product-service:
#    container_name: product-service
#    build:
#      context: .
#      dockerfile: product-service/Dockerfile
#    depends_on:
#      - mysql
#      - kafka
#    environment:
#      MYSQL_HOST: mysql
#      MYSQL_PORT: 3306
#      MYSQL_DATABASE: javatechie
#      MYSQL_USER: root
#      MYSQL_PASSWORD: root
#      EUREKA_DEFAULT_ZONE: http://eureka:8761/eureka/
#    ports:
#      - "8082:8082"
#
#  notification-service:
#    container_name: notification-service
#    build:
#      context: .
#      dockerfile: notification-service/Dockerfile
#    depends_on:
#      - kafka
#    environment:
#      KAFKA_HOST: kafka
#      KAFKA_PORT: 9092
#      KAFKA_GROUP_ID: notification-group
#    ports:
#      - "8083:8083"
#
#  order-service:
#    container_name: order-service
#    build:
#      context: .
#      dockerfile: order-service/Dockerfile
#    depends_on:
#      - kafka
#    environment:
#      KAFKA_HOST: kafka
#      KAFKA_PORT: 9092
#      EUREKA_DEFAULT_ZONE: http://eureka:8761/eureka/
#      MYSQL_HOST: mysql
#      MYSQL_PORT: 3306
#      MYSQL_DATABASE: javatechie
#      MYSQL_USER: root
#      MYSQL_PASSWORD: root
#    ports:
#      - "8081:8081"
#
#  api-gateway:
#    container_name: api-gateway
#    build:
#      context: .
#      dockerfile: api-gateway/Dockerfile
#    depends_on:
#      - eureka
#      - order-service
#      - product-service
#      - identity-service
#    environment:
#      EUREKA_DEFAULT_ZONE: http://eureka:8761/eureka/
#    ports:
#      - "8080:8080"
#
#  eureka:
#    build:
#      context: .
#      dockerfile: eureka-service-registry/Dockerfile
#    container_name: eureka-server
#    environment:
#      EUREKA_CLIENT_REGISTER_WITH_EUREKA: false
#      EUREKA_CLIENT_FETCH_REGISTRY: false
#    ports:
#      - "8761:8761"


#RUN KAFKA IN LOCAL

version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
